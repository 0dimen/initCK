buildscript{
    ext{
        springBootVersion = '2.1.7.RELEASE'
    }
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies{
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter-web')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    implementation('org.projectlombok:lombok')
    annotationProcessor('org.projectlombok:lombok')
    testAnnotationProcessor('org.projectlombok:lombok')

    implementation('org.springframework.boot:spring-boot-starter-data-jpa') // Spring Data Jpa 추상화 라이브러리. JPA 관련 라이브러리들의 버전 관리.
    implementation('com.h2database:h2') // 인메모리 관계형 데이터베이스.

    implementation('org.springframework.boot:spring-boot-starter-mustache') // 머스테치 템플릿 엔진

    implementation('org.springframework.boot:spring-boot-starter-oauth2-client') // 클라이언트 입장에서 소셜 기능 구현 시 필요 (ex. 소셜 로그인)

    implementation('org.springframework.session:spring-session-jdbc') // 세션 저장소 생성에 필요. spring web, spring jpa 사용을 위함.

    testImplementation('org.springframework.security:spring-security-test') // 스프링 시큐리티 테스트를 위한 도구 지원

    implementation("org.mariadb.jdbc:mariadb-java-client") //MariaDB 드라이버



}